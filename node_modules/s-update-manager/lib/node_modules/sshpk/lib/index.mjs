import { __require as requireKey } from './key.mjs';
import { __require as requireFingerprint } from './fingerprint.mjs';
import { __require as requireSignature } from './signature.mjs';
import { __require as requirePrivateKey } from './private-key.mjs';
import { __require as requireCertificate } from './certificate.mjs';
import { __require as requireIdentity } from './identity.mjs';
import { __require as requireErrors } from './errors.mjs';

var lib;
var hasRequiredLib;

function requireLib () {
	if (hasRequiredLib) return lib;
	hasRequiredLib = 1;
	// Copyright 2015 Joyent, Inc.

	var Key = requireKey();
	var Fingerprint = requireFingerprint();
	var Signature = requireSignature();
	var PrivateKey = requirePrivateKey();
	var Certificate = requireCertificate();
	var Identity = requireIdentity();
	var errs = requireErrors();

	lib = {
		/* top-level classes */
		Key: Key,
		parseKey: Key.parse,
		Fingerprint: Fingerprint,
		parseFingerprint: Fingerprint.parse,
		Signature: Signature,
		parseSignature: Signature.parse,
		PrivateKey: PrivateKey,
		parsePrivateKey: PrivateKey.parse,
		generatePrivateKey: PrivateKey.generate,
		Certificate: Certificate,
		parseCertificate: Certificate.parse,
		createSelfSignedCertificate: Certificate.createSelfSigned,
		createCertificate: Certificate.create,
		Identity: Identity,
		identityFromDN: Identity.parseDN,
		identityForHost: Identity.forHost,
		identityForUser: Identity.forUser,
		identityForEmail: Identity.forEmail,
		identityFromArray: Identity.fromArray,

		/* errors */
		FingerprintFormatError: errs.FingerprintFormatError,
		InvalidAlgorithmError: errs.InvalidAlgorithmError,
		KeyParseError: errs.KeyParseError,
		SignatureParseError: errs.SignatureParseError,
		KeyEncryptedError: errs.KeyEncryptedError,
		CertificateParseError: errs.CertificateParseError
	};
	return lib;
}

export { requireLib as __require };
