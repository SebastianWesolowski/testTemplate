import { __require as requireRef } from '../dotjs/ref.mjs';
import { __require as requireAllOf } from '../dotjs/allOf.mjs';
import { __require as requireAnyOf } from '../dotjs/anyOf.mjs';
import { __require as require_const } from '../dotjs/const.mjs';
import { __require as requireContains } from '../dotjs/contains.mjs';
import { __require as requireDependencies } from '../dotjs/dependencies.mjs';
import { __require as require_enum } from '../dotjs/enum.mjs';
import { __require as requireFormat } from '../dotjs/format.mjs';
import { __require as requireItems } from '../dotjs/items.mjs';
import { __require as require_limit } from '../dotjs/_limit.mjs';
import { __require as require_limitItems } from '../dotjs/_limitItems.mjs';
import { __require as require_limitLength } from '../dotjs/_limitLength.mjs';
import { __require as require_limitProperties } from '../dotjs/_limitProperties.mjs';
import { __require as requireMultipleOf } from '../dotjs/multipleOf.mjs';
import { __require as requireNot } from '../dotjs/not.mjs';
import { __require as requireOneOf } from '../dotjs/oneOf.mjs';
import { __require as requirePattern } from '../dotjs/pattern.mjs';
import { __require as requireProperties } from '../dotjs/properties.mjs';
import { __require as requirePropertyNames } from '../dotjs/propertyNames.mjs';
import { __require as requireRequired } from '../dotjs/required.mjs';
import { __require as requireUniqueItems } from '../dotjs/uniqueItems.mjs';
import { __require as requireValidate } from '../dotjs/validate.mjs';

var _rules;
var hasRequired_rules;

function require_rules () {
	if (hasRequired_rules) return _rules;
	hasRequired_rules = 1;

	//all requires must be explicit because browserify won't work with dynamic requires
	_rules = {
	  '$ref': requireRef(),
	  allOf: requireAllOf(),
	  anyOf: requireAnyOf(),
	  const: require_const(),
	  contains: requireContains(),
	  dependencies: requireDependencies(),
	  'enum': require_enum(),
	  format: requireFormat(),
	  items: requireItems(),
	  maximum: require_limit(),
	  minimum: require_limit(),
	  maxItems: require_limitItems(),
	  minItems: require_limitItems(),
	  maxLength: require_limitLength(),
	  minLength: require_limitLength(),
	  maxProperties: require_limitProperties(),
	  minProperties: require_limitProperties(),
	  multipleOf: requireMultipleOf(),
	  not: requireNot(),
	  oneOf: requireOneOf(),
	  pattern: requirePattern(),
	  properties: requireProperties(),
	  propertyNames: requirePropertyNames(),
	  required: requireRequired(),
	  uniqueItems: requireUniqueItems(),
	  validate: requireValidate()
	};
	return _rules;
}

export { require_rules as __require };
