var patternGroups;
var hasRequiredPatternGroups;

function requirePatternGroups () {
	if (hasRequiredPatternGroups) return patternGroups;
	hasRequiredPatternGroups = 1;

	var META_SCHEMA_ID = 'http://json-schema.org/draft-06/schema';

	patternGroups = function (ajv) {
	  var defaultMeta = ajv._opts.defaultMeta;
	  var metaSchemaRef = typeof defaultMeta == 'string'
	                      ? { $ref: defaultMeta }
	                      : ajv.getSchema(META_SCHEMA_ID)
	                        ? { $ref: META_SCHEMA_ID }
	                        : {};

	  ajv.addKeyword('patternGroups', {
	    // implemented in properties.jst
	    metaSchema: {
	      type: 'object',
	      additionalProperties: {
	        type: 'object',
	        required: [ 'schema' ],
	        properties: {
	          maximum: {
	            type: 'integer',
	            minimum: 0
	          },
	          minimum: {
	            type: 'integer',
	            minimum: 0
	          },
	          schema: metaSchemaRef
	        },
	        additionalProperties: false
	      }
	    }
	  });
	  ajv.RULES.all.properties.implements.push('patternGroups');
	};
	return patternGroups;
}

export { requirePatternGroups as __require };
