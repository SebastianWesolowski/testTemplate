import { __exports as makeDir } from '../../../../_virtual/make-dir.mjs';
import '../fs/index.mjs';
import './utils.mjs';
import { __exports as fs$1 } from '../../../../_virtual/index.mjs';
import { __exports as utils } from '../../../../_virtual/utils.mjs';

const fs = fs$1;
const { checkPath } = utils;

const getMode = options => {
  const defaults = { mode: 0o777 };
  if (typeof options === 'number') return options
  return ({ ...defaults, ...options }).mode
};

makeDir.makeDir = async (dir, options) => {
  checkPath(dir);

  return fs.mkdir(dir, {
    mode: getMode(options),
    recursive: true
  })
};

makeDir.makeDirSync = (dir, options) => {
  checkPath(dir);

  return fs.mkdirSync(dir, {
    mode: getMode(options),
    recursive: true
  })
};

export { makeDir as default };
