import '../fs/index.mjs';
import '../../../universalify/index.mjs';
import { __exports as universalify } from '../../../../_virtual/index2.mjs';
import { __exports as fs$1 } from '../../../../_virtual/index.mjs';

const fs = fs$1;
const u = universalify.fromPromise;

async function utimesMillis (path, atime, mtime) {
  // if (!HAS_MILLIS_RES) return fs.utimes(path, atime, mtime, callback)
  const fd = await fs.open(path, 'r+');

  let closeErr = null;

  try {
    await fs.futimes(fd, atime, mtime);
  } finally {
    try {
      await fs.close(fd);
    } catch (e) {
      closeErr = e;
    }
  }

  if (closeErr) {
    throw closeErr
  }
}

function utimesMillisSync (path, atime, mtime) {
  const fd = fs.openSync(path, 'r+');
  fs.futimesSync(fd, atime, mtime);
  return fs.closeSync(fd)
}

var utimes = {
  utimesMillis: u(utimesMillis),
  utimesMillisSync
};

export { utimes as u };
