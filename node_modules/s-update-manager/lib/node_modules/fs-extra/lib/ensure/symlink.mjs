import '../../../universalify/index.mjs';
import path$1 from 'path';
import '../fs/index.mjs';
import { m as mkdirs$1 } from '../mkdirs/index.mjs';
import { s as symlinkPaths_1 } from './symlink-paths.mjs';
import { s as symlinkType_1 } from './symlink-type.mjs';
import { p as pathExists_1 } from '../path-exists/index.mjs';
import { s as stat } from '../util/stat.mjs';
import { __exports as universalify } from '../../../../_virtual/index2.mjs';
import { __exports as fs$1 } from '../../../../_virtual/index.mjs';

const u = universalify.fromPromise;
const path = path$1;
const fs = fs$1;

const { mkdirs, mkdirsSync } = mkdirs$1;

const { symlinkPaths, symlinkPathsSync } = symlinkPaths_1;
const { symlinkType, symlinkTypeSync } = symlinkType_1;

const { pathExists } = pathExists_1;

const { areIdentical } = stat;

async function createSymlink (srcpath, dstpath, type) {
  let stats;
  try {
    stats = await fs.lstat(dstpath);
  } catch { }

  if (stats && stats.isSymbolicLink()) {
    const [srcStat, dstStat] = await Promise.all([
      fs.stat(srcpath),
      fs.stat(dstpath)
    ]);

    if (areIdentical(srcStat, dstStat)) return
  }

  const relative = await symlinkPaths(srcpath, dstpath);
  srcpath = relative.toDst;
  const toType = await symlinkType(relative.toCwd, type);
  const dir = path.dirname(dstpath);

  if (!(await pathExists(dir))) {
    await mkdirs(dir);
  }

  return fs.symlink(srcpath, dstpath, toType)
}

function createSymlinkSync (srcpath, dstpath, type) {
  let stats;
  try {
    stats = fs.lstatSync(dstpath);
  } catch { }
  if (stats && stats.isSymbolicLink()) {
    const srcStat = fs.statSync(srcpath);
    const dstStat = fs.statSync(dstpath);
    if (areIdentical(srcStat, dstStat)) return
  }

  const relative = symlinkPathsSync(srcpath, dstpath);
  srcpath = relative.toDst;
  type = symlinkTypeSync(relative.toCwd, type);
  const dir = path.dirname(dstpath);
  const exists = fs.existsSync(dir);
  if (exists) return fs.symlinkSync(srcpath, dstpath, type)
  mkdirsSync(dir);
  return fs.symlinkSync(srcpath, dstpath, type)
}

var symlink = {
  createSymlink: u(createSymlink),
  createSymlinkSync
};

export { symlink as s };
