import { createPath } from '../../util/createPath.mjs';
import { debugFunction } from '../../util/debugFunction.mjs';
import { scanDirectory } from '../../util/scanDirectory.mjs';

const scanProjectFolder = async (config) => {
    debugFunction(config.isDebug, { config }, '[PrepareTemplate] Scan project folder');
    const excludePaths = [
        createPath([config.projectCatalog, '.DS_Store']),
        createPath([config.projectCatalog, config.repositoryMapFileName]).replace('./', ''),
        createPath([config.projectCatalog, config.templateCatalogName]).replace('./', ''),
    ];
    return scanDirectory(config.projectCatalog, excludePaths)
        .then((fileList) => {
        const cleanupArray = fileList.map((file) => {
            return file.replace(config.projectCatalog.replace('./', ''), '');
        });
        return { config, fileList: cleanupArray }; // Wyświetli przefiltrowane pliki
    })
        .catch((error) => {
        console.error('An error occurred:', error);
        return { config, fileList: [] }; // Wyświetli przefiltrowane plikireturn [];
    });
};

export { scanProjectFolder };
