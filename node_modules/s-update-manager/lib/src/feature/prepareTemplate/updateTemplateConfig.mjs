import { defaultRepositoryMapFileConfig } from '../../prepare-template.mjs';
import { debugFunction } from '../../util/debugFunction.mjs';
import { parseJSON } from '../../util/parseJSON.mjs';
import { readFile } from '../../util/readFile.mjs';
import { updateJsonFile } from '../../util/updateJsonFile.mjs';

const updateTemplateConfig = async ({ config, templateFileList, }) => {
    debugFunction(config.isDebug, { config }, '[PrepareTemplate] updateTemplateConfig');
    const repositoryMapFileConfig = await readFile(config.repositoryMapFilePath).then(async (bufferData) => parseJSON(bufferData.toString()));
    const newContent = repositoryMapFileConfig;
    const replaceFile = true;
    newContent.fileMap = templateFileList;
    return ((await updateJsonFile({
        filePath: config.repositoryMapFilePath,
        config,
        newContent,
        replaceFile,
    })) || defaultRepositoryMapFileConfig);
};

export { updateTemplateConfig };
