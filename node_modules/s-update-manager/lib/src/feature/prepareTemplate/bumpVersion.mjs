import semver from '../../../node_modules/semver/index.mjs';
import { createFile } from '../../util/createFile.mjs';
import { debugFunction } from '../../util/debugFunction.mjs';
import { isFileExists } from '../../util/isFileExists.mjs';
import { parseJSON } from '../../util/parseJSON.mjs';
import { readFile } from '../../util/readFile.mjs';

const bumpVersion = async (config) => {
    debugFunction(config.isDebug, { config }, '[PrepareTemplate] Bump Version');
    const repositoryMapFileConfig = await readFile(config.repositoryMapFilePath).then(async (bufferData) => parseJSON(bufferData.toString()));
    const currentVersion = repositoryMapFileConfig.templateVersion;
    if (!config.bumpVersion) {
        debugFunction(config.isDebug, { config }, `[PrepareTemplate] stay with current version, ${currentVersion}`);
        return config;
    }
    if (await isFileExists(config.repositoryMapFilePath)) {
        repositoryMapFileConfig.templateVersion = semver.inc(currentVersion, 'patch') || '1.0.0';
        await createFile({
            filePath: config.repositoryMapFilePath,
            content: JSON.stringify(repositoryMapFileConfig),
            isDebug: config.isDebug,
            options: {
                overwriteFile: true,
            },
        });
    }
    return config;
};

export { bumpVersion };
