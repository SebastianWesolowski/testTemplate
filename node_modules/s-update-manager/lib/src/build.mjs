#!/usr/bin/env node
import minimist from '../node_modules/minimist/index.mjs';
import { getConfig } from './feature/config/defaultConfig.mjs';
import { buildFromConfig } from './feature/buildFromConfig.mjs';
import { cleanUp } from './feature/cleanUp.mjs';
import { debugFunction } from './util/debugFunction.mjs';
import { isFileExists } from './util/isFileExists.mjs';

const build = async (args) => {
    const config = await getConfig(args);
    if (!(await isFileExists(config.snpFileMapConfig)) && (await isFileExists(config.snpConfigFile))) {
        if (process.env.SDEBUG !== 'true') {
            throw new Error('Config files (snpFileMapConfig or snpConfigFile)  not exists, use init script');
        }
    }
    debugFunction(config.isDebug, '=== Start SNP BUILD ===');
    return config;
};
const args = minimist(process.argv.slice(2));
let finalConfig = {
    isDebug: false,
};
build(args)
    .then((config) => {
    finalConfig = config;
    return buildFromConfig(config);
})
    .then((config) => {
    finalConfig = config;
    return cleanUp(config);
})
    .finally(() => {
    debugFunction(finalConfig?.isDebug, { finalConfig }, '[BUILD] final config');
    debugFunction(finalConfig?.isDebug, '=== final SNP BUILD ===');
});

export { build };
