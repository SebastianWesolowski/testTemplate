import 'fs';
import { basename, dirname, join } from 'path';
import { isFileExists } from './isFileExists.mjs';
import { isFolderExist } from './isFolderExist.mjs';
import { toCreateFile } from './toCreateFile.mjs';

async function createFile({ filePath, fileName, folderPath, content, options = { createFolder: true, overwriteFile: true, backupFile: true }, isDebug = false, }) {
    // TODO if content is object auto convert to buffer ?
    if (!filePath && (!folderPath || !fileName)) {
        throw new Error("Either 'filePath' or both 'folderPath' and 'fileName' are required.");
    }
    fileName = filePath ? basename(filePath) : fileName;
    folderPath = filePath ? dirname(filePath) : folderPath;
    if (!filePath) {
        filePath = join(folderPath, fileName);
    }
    try {
        await isFolderExist({
            folderPath,
            createFolder: options?.createFolder || true,
        });
        if ((await isFileExists(filePath)) && isDebug) {
            console.warn('File already exists: ' + filePath);
        }
        await toCreateFile({ filePath, content, options });
        return filePath;
    }
    catch (error) {
        console.error(error);
        return '';
    }
}

export { createFile };
