import { formatSnp } from '../feature/formatSnp.mjs';
import { updateDetailsFileMapConfig2 } from '../feature/updateFileMapConfig.mjs';
import { createPath } from './createPath.mjs';
import { parseJSON } from './parseJSON.mjs';
import { readFile } from './readFile.mjs';

async function prepareExtraFile(config) {
    let snpFileMapConfig = await readFile(config.snpFileMapConfig).then(async (bufferData) => parseJSON(bufferData.toString()));
    for (const SNPKeySuffix of config.availableSNPKeySuffix) {
        if (snpFileMapConfig.snpFileMap) {
            for (const [realFileName, snpPathFileSet] of Object.entries(snpFileMapConfig.snpFileMap)) {
                if (!snpPathFileSet[SNPKeySuffix]) {
                    const snpSuffix = formatSnp(SNPKeySuffix, 'suffix');
                    const SNPSuffixFileName = realFileName + snpSuffix;
                    snpFileMapConfig = await updateDetailsFileMapConfig2({
                        snpFileMapConfig,
                        config,
                        operation: 'addConfigSuffixFile',
                        SNPKeySuffix,
                        SNPSuffixFileName,
                        isCreated: false,
                        path: createPath([config.snpCatalog, SNPSuffixFileName]),
                        realFileName,
                        realPath: createPath([config.projectCatalog, realFileName]),
                        templateVersion: snpFileMapConfig.templateVersion,
                    });
                }
            }
        }
    }
    return config;
}

export { prepareExtraFile };
