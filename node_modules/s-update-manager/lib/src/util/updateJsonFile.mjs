import { debugFunction } from './debugFunction.mjs';
import { isFileExists } from './isFileExists.mjs';
import { parseJSON } from './parseJSON.mjs';
import { readFile } from './readFile.mjs';
import { updateJson } from './updateJson.mjs';

const updateJsonFile = async ({ filePath, config, newContent, replaceFile = true, }) => {
    if (await isFileExists(filePath)) {
        return await updateJson({ filePath: filePath, newContent, replace: replaceFile }).then(() => {
            if (replaceFile) {
                return newContent;
            }
            return readFile(filePath).then(async (bufferData) => {
                return parseJSON(bufferData.toString());
            });
        });
    }
    else {
        debugFunction(config?.isDebug, `file snpFileMapConfig is not exist ${filePath}`, '[updateFileMapConfig]');
        return null;
    }
};

export { updateJsonFile };
